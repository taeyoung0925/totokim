 -- 1번 학생 입력
 -- 학번은 시퀀스를 이용하여 "현재년도||순차번호"로 입력한다

DROP SEQUENCE STUDENT_SEQ;
CREATE SEQUENCE STUDENT_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 999
MINVALUE 1
NOCYCLE
NOCACHE;

ALTER SEQUENCE STUDENT_SEQ INCREMENT BY 1;

DROP TABLE MAJOR;
DROP TABLE STUDENT;


CREATE TABLE MAJOR (
MNO NUMBER(2) PRIMARY KEY,
MNAME VARCHAR2(50) NOT NULL
);

CREATE TABLE STUDENT(
SNO NUMBER(10) PRIMARY KEY,
SNAME VARCHAR2(50),
MNO NUMBER(2) REFERENCES MAJOR(MNO),
SCORE NUMBER(3) DEFAULT 0, CHECK(SCORE >= 0 AND SCORE <= 100),
SEXPEL NUMBER(1) DEFAULT 0, CHECK(SEXPEL = 0 OR SEXPEL = 1)
);

SELECT * FROM MAJOR;
SELECT  * FROM STUDENT;


INSERT INTO MAJOR VALUES (1, '빅데이터학');
INSERT INTO MAJOR VALUES (2, '경영정보학');
INSERT INTO MAJOR VALUES (3, '컴퓨터공학');
INSERT INTO MAJOR VALUES (4, '소프트웨어');
INSERT INTO MAJOR VALUES (5, '인공지능학');		


INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '정우성',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),90,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '박세영',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),80,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '배수지',(SELECT MNO FROM MAJOR WHERE MNAME = '컴퓨터공학'),20,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍길동',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),95,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍철수',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),20,1 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '오창주',(SELECT MNO FROM MAJOR WHERE MNAME = '인공지능학'),20 );
SELECT STUDENT_SEQ.CURRVAL FROM DUAL;

SELECT * FROM MAJOR;
SELECT  * FROM STUDENT;

-- 학번 만들기
SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0') SNO FROM DUAL;
SELECT STUDENT_SEQ.NEXTVAL FROM DUAL;
SELECT LPAD(STUDENT_SEQ.NEXTVAL,3,'0')FROM DUAL;
SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) FROM DUAL;
-- 학과 번호 찾기
SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학';

 -- 2번  학과별 조회후 총점을 추가하여 총점이 높은 순으로 이름(번호)로 출력
SELECT * FROM MAJOR;
SELECT  * FROM STUDENT;
SELECT SNO FROM STUDENT;

SELECT SNAME || '(' || SNO || ')' SNO, MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
ORDER BY SCORE DESC;

SELECT ROWNUM||'등' RANK, SNO, MNAME, SCORE FROM (SELECT SNAME || '(' || SNO || ')' SNO, MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND MNAME = '빅데이터학'
ORDER BY SCORE DESC); --2번에 쓸 쿼리

-- 3번 제적당하지 않은 전체 학생을 조회 후 점수가 높은 순으로 아래와 같이 출력한다
SELECT * FROM MAJOR;
SELECT  * FROM STUDENT;

SELECT SNAME || '(' || SNO || ')' SNO, MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND SEXPEL = 0
ORDER BY SCORE DESC;

SELECT ROWNUM RANK, SNO, MNAME, SCORE FROM (SELECT SNAME || '(' || SNO || ')' SNO, MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND SEXPEL = 0
ORDER BY SCORE DESC); -- 3번에 쓸 쿼리

--4번 제적당한 학생을 조회 후 점수가 높은 순으로 아래와 같이 출력
SELECT ROWNUM RANK, SNO, MNAME, SCORE FROM (SELECT SNAME || '(' || SNO || ')' SNO, MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND SEXPEL = 1
ORDER BY SCORE DESC);

COMMIT;


--5번 제적처리 하는 update
UPDATE STUDENT SET SEXPEL = 0 WHERE SNAME = '김다솔';
SELECT * FROM STUDENT;
COMMIT;
