 -- 1 학생입력
 SELECT * FROM STUDENT;
 DROP SEQUENCE STUDENT_SEQ;
CREATE SEQUENCE STUDENT_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 999
MINVALUE 1
NOCYCLE
NOCACHE;

ALTER SEQUENCE STUDENT_SEQ INCREMENT BY 1;

DROP TABLE MAJOR;
DROP TABLE STUDENT;


CREATE TABLE MAJOR (
MNO NUMBER(2) PRIMARY KEY,
MNAME VARCHAR2(50) NOT NULL
);

CREATE TABLE STUDENT(
SNO NUMBER(10) PRIMARY KEY,
SNAME VARCHAR2(50),
MNO NUMBER(2) REFERENCES MAJOR(MNO),
SCORE NUMBER(3) DEFAULT 0, CHECK(SCORE >= 0 AND SCORE <= 100),
SEXPEL NUMBER(1) DEFAULT 0, CHECK(SEXPEL = 0 OR SEXPEL = 1)
);

SELECT * FROM MAJOR;
SELECT  * FROM STUDENT;


INSERT INTO MAJOR VALUES (1, '빅데이터학');
INSERT INTO MAJOR VALUES (2, '경영정보학');
INSERT INTO MAJOR VALUES (3, '컴퓨터공학');
INSERT INTO MAJOR VALUES (4, '소프트웨어');
INSERT INTO MAJOR VALUES (5, '인공지능학');		


INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '정우성',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),90,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '박세영',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),80,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '배수지',(SELECT MNO FROM MAJOR WHERE MNAME = '컴퓨터공학'),20,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍길동',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),95,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍철수',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),20,1 );
INSERT INTO STUDENT (SNO,SNAME,MNO,SCORE) VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '신상희',(SELECT MNO FROM MAJOR WHERE MNAME = '인공지능학'),20 );


-- SwingStudentMng에서 필요한 Query
-- 0. 첫화면에 전공이름들 콤보박스에 추가(mName) : DAO에서 public Vector<String> getMNamelist()

-- 1. 학번검색 (sNo, sName, mName, score) : DAO에서 public StudentSwingDto sNogetStudent(String sNo)
SELECT SNO, SNAME,MNAME,SCORE FROM STUDENT S, MAJOR M
WHERE S.MNO = M.MNO 
AND SNO = 2021001;
-- 2. 이름검색 (sNo, sName, mName, score)  : DAO에서 public ArrayList<StudentSwingDto> sNamegetStudent(String sName)
SELECT SNO, SNAME, MNAME,SCORE FROM STUDENT S, MAJOR M
WHERE S.MNO = M.MNO 
AND SNAME = '오창주';
-- 3. 전공검색 (rank, sName(sNo포함), mName(mNo포함), score) : DAO에서 public ArrayList<StudentSwingDto> mNamegetStudent(String mName)
--- 출력 : 1 정우성(2021001) 빅데이터학(1) 90 
SELECT ROWNUM RANK ,SNAME, MNAME, SCORE 
FROM (SELECT SNAME || '(' || SNO || ')' SNAME, MNAME || '(' || M.MNO || ')' MNAME ,SCORE FROM STUDENT S, MAJOR M
WHERE S.MNO = M.MNO 
AND MNAME = '경영정보학'
ORDER BY SCORE DESC);
COMMIT;
-- 4. 학생입력 : DAO에서 public int insertStudent(String sName, String mName, int score)
--              DAO에서 public int insertStudent(StudentSwingDto dto)
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '정우성',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),90,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '박세영',(SELECT MNO FROM MAJOR WHERE MNAME = '빅데이터학'),80,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '배수지',(SELECT MNO FROM MAJOR WHERE MNAME = '컴퓨터공학'),20,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍길동',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),95,0 );
INSERT INTO STUDENT VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '홍철수',(SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'),20,1 );
--학생입력에 사용할 쿼리(1)
INSERT INTO STUDENT (SNO,SNAME,MNO,SCORE) VALUES ((TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))|| LPAD(STUDENT_SEQ.NEXTVAL,3,'0')), '신상희',(SELECT MNO FROM MAJOR WHERE MNAME = '인공지능학'),20 ); 
-- 5. 학생수정 : DAO에서 public int updateStudent(String sNo, String sName, String mName, int score)
--              DAO에서 public int updateStudent(StudentSwingDto dto)
UPDATE STUDENT SET SNAME = '김상희' , MNO = (SELECT MNO FROM MAJOR WHERE MNAME = '소프트웨어'), SCORE = 80 WHERE SNO = 2021009;
-- 6. 학생출력 (rank, sName(sNo포함), mName(mNo포함), score) : DAO에서 public ArrayList<StudentSwingDto> getStudents()
-- 출력 : 1 정우성(2021001) 빅데이터학(1) 90
SELECT ROWNUM RANK, SNAME, MNAME, SCORE FROM (SELECT SNAME || '(' || SNO || ')' SNAME, MNAME || '(' || M.MNO || ')' MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND SEXPEL = 0
ORDER BY SCORE DESC);
-- 7. 제적자출력  (rank, sName(sNo포함), mName(mNo포함), score) : DAO에서 public ArrayList<StudentSwingDto> getStudentsExpel()
-- 출력 : 1 김제적(2021004) 컴퓨터공학(3) 10
SELECT ROWNUM RANK, SNAME, MNAME, SCORE FROM (SELECT SNAME || '(' || SNO || ')' SNAME, MNAME || '(' || M.MNO || ')' MNAME, SCORE FROM MAJOR M, STUDENT S
WHERE M.MNO = S.MNO
AND SEXPEL = 1
ORDER BY SCORE DESC);
-- 8. 제적처리 : DAO에서 public int sNoExpel(String sNo)
UPDATE STUDENT SET SEXPEL = 1 WHERE SNO = 2021009 ;

SELECT MNAME FROM MAJOR;











